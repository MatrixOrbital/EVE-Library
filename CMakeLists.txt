cmake_minimum_required(VERSION 3.13)
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMake")
project(Matrix_Orbital_EVE_examples)
include(CMake/macros.cmake)

if(MSVC)
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
	set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/bin/\${BUILD_TYPE} CACHE PATH "default install path" FORCE)
else()
	set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/bin CACHE PATH "default install path" FORCE)
endif()

if(WIN32)
	set(CPACK_GENERATOR ZIP)
	set(PROJECT_DESCRIPTION  "Matrix Orbital EVE examples")
	set(PROJECT_COPYRIGHT    "Copyright (C) 2018-${CURRENT_YEAR} Matrix Orbital")
	set(PROJECT_CONTACT      "support@matrixorbital.com")
	set(PROJECT_VENDOR       "Matrix Orbital")
	set(CPACK_PACKAGE_VERSION_MAJOR 1)
	set(CPACK_PACKAGE_VERSION_MINOR 0)
	set(CPACK_PACKAGE_VERSION_PATCH 1)
	include(CPack)

	set(CMAKE_C_FLAGS_DEBUG            "/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1")
	set(CMAKE_C_FLAGS_MINSIZEREL       "/MT /O1 /Ob1 /D NDEBUG")
	set(CMAKE_C_FLAGS_RELEASE          "/MT /O2 /Ob2 /D NDEBUG")
	set(CMAKE_C_FLAGS_RELWITHDEBINFO   "/MT /Zi /O2 /Ob1 /D NDEBUG")
	set(CMAKE_CXX_FLAGS_DEBUG          "/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1")
	set(CMAKE_CXX_FLAGS_MINSIZEREL     "/MT /O1 /Ob1 /D NDEBUG")
	set(CMAKE_CXX_FLAGS_RELEASE        "/MT /O2 /Ob2 /D NDEBUG")
	set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/MT /Zi /O2 /Ob1 /D NDEBUG")
else()
	add_compile_options(-fPIC)
endif()

set(EVE2_EXAMPLES_DISPLAY_SIZES 70 50 43 39 38 35 29 CACHE STRING "EVE2 Screensizes to build binaries for")
set(EVE3_EXAMPLES_DISPLAY_SIZES 70 50 43 39 38 35 29 24 CACHE STRING "EVE3 Screensizes to build binaries for")
set(EVE4_EXAMPLES_DISPLAY_SIZES 101 40 70I 70I_WG CACHE STRING "EVE4 Screensizes to build binaries for")
set(EVE_EXAMPLES_PLATFORMS EVE2 EVE3 EVE4 CACHE STRING "Platforms build binaries for")
set(EVE_EXAMPLES_TOUCH TPN TPR TPC CACHE STRING "Touch technologies to build binaries for")

# Create a target for importing the d2xx headers
if(WIN32)
	add_library(d2xx INTERFACE)
	set_target_properties(d2xx PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_SOURCE_DIR}/include/ftdi")
	add_subdirectory(ThirdParty/ftdi_mpsse)
else()
	find_package(libftdi REQUIRED)
endif()

add_subdirectory(src)
